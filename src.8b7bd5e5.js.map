{"version":3,"sources":["data/dataStore.js","framework/element.js","framework/render.js","data/SteamAPI.js","utils.js","data/newsData.js","data/gamesData.js","components/Checkbox/Checkbox.js","components/Games/Games.js","components/Timestamp/Timestamp.js","components/Search/SearchByKeyword.js","components/NewsFeedItem/NewsFeedItem.js","components/NewsFeed/NewsFeed.js","components/News/NewsResults.js","components/App/App.js","components/App/index.js","index.js"],"names":["dataStore","checkedGamesIDs","currentGameId","isDataLoading","error","newsByGames","currentTimestamp","tag","filteredNews","keyword","createElement","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","classList","split","filter","Boolean","add","setAttribute","e","console","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","renderApp","Component","Target","componentFunction","target","innerHTML","gamesInfo","apps","appid","herokuURL","getNewsForGameUrl","gameId","getDateFromUnixTimestamp","dt","Date","toLocaleDateString","getMonthOfDate","getMonth","getYearOfDate","getFullYear","currentDate","Math","floor","now","sortDataByNewest","data","sort","a","b","date","dataToHTML","parser","content","DOMParser","parseFromString","body","childNodes","div","from","el","getStartDate","start","dayOfWeek","getDay","numDay","getDate","setDate","isCurrentGameDataLoaded","loadData","sourceURL","Promise","resolve","fetch","method","headers","JSON","stringify","url","then","response","json","performRetrieve","catch","finally","filterDataByTimestamp","dataByTimestamp","today","newsItem","week","month","alltime","trackGames","id","filterID","Checkbox","label","onChange","condition","AvailableGames","event","map","TIMESTAMPS","Timestamp","setCurrentTimestampCB","selected","setCurrentKeyword","Search","NewsItem","itemData","setTagCB","title","contents","feedlabel","setTag","NewsFeed","dataNewsContainer","appnews","newsitems","item","setCurrentTimestamp","NewsResults","length","App","styles","main_header","getElementById"],"mappings":"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","file":"src.8b7bd5e5.js","sourceRoot":"..\\src","sourcesContent":["const dataStore = {\n  checkedGamesIDs: [],\n  currentGameId: '',\n  isDataLoading: false,\n  error: null,\n  newsByGames: {},\n  currentTimestamp: 'alltime',\n  tag: null,\n  filteredNews: null,\n  keyword: '',\n};\n\nexport default dataStore;\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n        Passing children as the 2nd argument is required as jsx transformer puts component functions\n        and regular tags in wrapper functions that expect children as the 2nd param\n       */\n    return tag({ ...props, children }, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else if (name.toLowerCase() === 'classname') {\n            // We want to treat both strings and arrays in a similar manner\n            const classList = typeof value === 'string' ? value.split(' ').filter(Boolean) : value;\n            element.classList.add(...classList);\n          } else {\n            element.setAttribute(\n              name,\n              /** @type {string} */\n              value,\n            );\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement } from './element';\n\nlet Component, Target;\n\n/**\n * Renders a component and attaches it to the target DOM element\n * @param componentFunction - Component function or class\n * @param target - DOM element to attach component to\n */\nfunction renderApp(componentFunction = null, target = null) {\n  // Memorize parameters to enable re-render when `renderApp` gets called without arguments\n  if (componentFunction) Component = componentFunction;\n  if (target) Target = target;\n  Target.innerHTML = '';\n  // Ensure that the component gets rebuilt\n  Target.appendChild(<Component />);\n}\n\nexport default renderApp;\n","export const gamesInfo = {\n  apps: [\n    {\n      appid: 730,\n      name: 'Counter-Strike: Global Offensive',\n    },\n    {\n      appid: 1091500,\n      name: 'Cyberpunk 2077',\n    },\n    {\n      appid: 570,\n      name: 'Dota 2',\n    },\n    {\n      appid: 578080,\n      name: 'PUBG',\n    },\n    {\n      appid: 440,\n      name: 'TF2',\n    },\n  ],\n};\n\nexport const herokuURL = 'https://not-so-corsy.herokuapp.com/getdata';\n\nexport function getNewsForGameUrl(gameId) {\n  return `http://api.steampowered.com/ISteamNews/GetNewsForApp/v0002/?appid=${gameId}&count=20`;\n}\n","export function getDateFromUnixTimestamp(dt) {\n  return new Date(dt * 1000).toLocaleDateString();\n}\nexport function getMonthOfDate(dt) {\n  return new Date(dt * 1000).getMonth();\n}\n\nexport function getYearOfDate(dt) {\n  return new Date(dt * 1000).getFullYear();\n}\n\nexport const currentDate = Math.floor(Date.now() / 1000);\n\nexport function sortDataByNewest(data) {\n  return data.sort((a, b) => (a.date < b.date ? 1 : -1));\n}\n\nexport function dataToHTML(data) {\n  const parser = new DOMParser();\n  const toHTML = parser.parseFromString(data, 'text/html');\n  const content = toHTML.body.childNodes;\n  const div = document.createElement('div');\n  Array.from(content).forEach(el => div.appendChild(el));\n  return div;\n}\n\nexport function getStartDate() {\n  let now = new Date();\n  let start = new Date(now);\n  let dayOfWeek = now.getDay();\n  let numDay = now.getDate() + 1;\n  start.setDate(numDay - dayOfWeek - 6);\n\n  return Math.floor(start / 1000);\n}\n","import { getNewsForGameUrl, herokuURL } from './SteamAPI';\nimport renderApp from '../framework/render';\nimport { getDateFromUnixTimestamp, getYearOfDate, getMonthOfDate, getStartDate } from '../utils';\n\nexport default function isCurrentGameDataLoaded() {\n  return Boolean(window.dataStore.newsByGames[window.dataStore.currentGameId]);\n}\n\nfunction loadData() {\n  const sourceURL = getNewsForGameUrl(window.dataStore.currentGameId);\n\n  if (!isCurrentGameDataLoaded()) {\n    return fetch(herokuURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url: sourceURL }),\n    })\n      .then(response => response.json())\n      .then(data => ({ data }));\n  }\n\n  return Promise.resolve({});\n}\n\nexport function performRetrieve() {\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n  renderApp();\n  loadData()\n    .then(({ error, data }) => {\n      window.dataStore.isDataLoading = false;\n      if (error) {\n        window.dataStore.error = error;\n      } else if (data) {\n        window.dataStore.newsByGames[window.dataStore.currentGameId] = data;\n      }\n    })\n    .catch(() => {\n      window.dataStore.error = 'Some error occurred.';\n    })\n    .finally(renderApp);\n}\n\nexport function filterDataByTimestamp(data, currentDate, currentTimestamp) {\n  const dataByTimestamp = {\n    today: () => {\n      return data.filter(\n        newsItem =>\n          getDateFromUnixTimestamp(newsItem.date) == getDateFromUnixTimestamp(currentDate),\n      );\n    },\n    week: () => {\n      return data.filter(newsItem => newsItem.date > getStartDate());\n    },\n    month: () => {\n      return data.filter(\n        newsItem =>\n          getYearOfDate(newsItem.date) == getYearOfDate(currentDate) &&\n          getMonthOfDate(newsItem.date) == getMonthOfDate(currentDate),\n      );\n    },\n    alltime: () => {\n      return data;\n    },\n  };\n  return dataByTimestamp[currentTimestamp]();\n}\n","import renderApp from '../framework/render';\n\nexport default function trackGames({ target }) {\n  const id = target.id;\n  if (window.dataStore.checkedGamesIDs.includes(id)) {\n    window.dataStore.checkedGamesIDs = window.dataStore.checkedGamesIDs.filter(\n      filterID => filterID !== id,\n    );\n  } else {\n    window.dataStore.checkedGamesIDs = [...window.dataStore.checkedGamesIDs, id];\n    window.dataStore.currentGameId = id;\n  }\n  renderApp();\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\n//import styles from './Checkbox.css';\n\nexport default function Checkbox({ id = null, label = '', onChange = null, condition = false }) {\n  return (\n    <label For={id}>\n      <input type=\"checkbox\" id={id} value={id} checked={condition} onChange={onChange} />\n      <span>{label}</span>\n    </label>\n  );\n  /* return (\n    <label className={[styles.check, styles.option]}>\n      <input className={styles.check__input} type=\"checkbox\" onChange={onChange} />\n      <span className={styles.check__box}></span>\n      {label}\n    </label>\n  );*/\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { performRetrieve } from '../../data/newsData';\nimport { gamesInfo } from '../../data/SteamAPI';\nimport trackGames from '../../data/gamesData';\nimport Checkbox from '../Checkbox/Checkbox';\nimport styles from './Games.css';\n\nexport default function AvailableGames() {\n  return (\n    <form\n      id=\"games\"\n      onChange={event => {\n        trackGames(event);\n        performRetrieve();\n      }}\n    >\n      <fieldset class=\"allowed_games\">\n        <legend>Select games to track news</legend>\n        {gamesInfo.apps.map(({ appid, name }) => (\n          <>\n            <Checkbox\n              id={appid}\n              label={name}\n              condition={window.dataStore.checkedGamesIDs.includes(appid.toString())}\n            />\n          </>\n        ))}\n      </fieldset>\n    </form>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\n\nconst TIMESTAMPS = [\n  { id: 'all', value: 'alltime', name: 'All news' },\n  { id: 'today', value: 'today', name: 'Today' },\n  { id: 'week', value: 'week', name: 'For last 7 days' },\n  { id: 'month', value: 'month', name: 'This month' },\n];\n\nexport function Timestamp({ currentTimestamp, setCurrentTimestampCB }) {\n  return (\n    <>\n      <div>\n        <p>Timestamps</p>\n        <select id=\"selectTimestamp\" onChange={event => setCurrentTimestampCB(event.target.value)}>\n          {TIMESTAMPS.map(({ id, value, name }) => {\n            return (\n              <option\n                value={value}\n                id={id}\n                name=\"timestamp-option\"\n                {...(value === currentTimestamp ? { selected: '' } : {})}\n              >\n                {name}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport renderApp from '../../framework/render';\n\nconst setCurrentKeyword = function (value) {\n  window.dataStore.keyword = value;\n  renderApp();\n};\n\nexport default function Search() {\n  return (\n    <div>\n      <p>Input KEYWORD and press enter</p>\n      <input\n        type=\"text\"\n        id=\"search-input\"\n        placeholder=\"search\"\n        value={window.dataStore.keyword}\n        onChange={event => setCurrentKeyword(event.target.value)}\n      />\n      <button type=\"button\" onClick={event => renderApp()}>\n        Search\n      </button>\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\n\nimport { getDateFromUnixTimestamp } from '../../utils';\nimport { dataToHTML } from '../../utils';\nimport Checkbox from '../Checkbox/Checkbox';\n\nexport default function NewsItem({ itemData, setTagCB }) {\n  const { date, title, contents, feedlabel } = itemData;\n  return (\n    <>\n      <h3 class=\"title\">{title}</h3>\n      <div>{feedlabel}</div>\n      <div>{getDateFromUnixTimestamp(date)}</div>\n      <p>{dataToHTML(contents)}</p>\n      <div>\n        {' '}\n        All news with tag\n        <>\n          <Checkbox\n            id={feedlabel}\n            label={feedlabel}\n            condition={window.dataStore.tag == feedlabel}\n            onChange={event => setTagCB(event.target.value)}\n          />\n        </>\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\n\nimport { filterDataByTimestamp } from '../../data/newsData';\nimport { currentDate, sortDataByNewest } from '../../utils';\nimport NewsItem from '../NewsFeedItem/NewsFeedItem';\nimport renderApp from '../../framework/render';\n\nconst setTag = function (value) {\n  if (window.dataStore.tag !== null) {\n    window.dataStore.tag = null;\n  } else {\n    window.dataStore.tag = value;\n  }\n\n  renderApp();\n};\n\nexport default function NewsFeed() {\n  const { checkedGamesIDs, newsByGames, tag, currentTimestamp, keyword } = window.dataStore;\n  let dataNewsContainer = [];\n\n  checkedGamesIDs.map(appid => {\n    dataNewsContainer = [...dataNewsContainer, ...newsByGames[appid].appnews.newsitems];\n  });\n\n  window.dataStore.filteredNews = filterDataByTimestamp(\n    dataNewsContainer,\n    currentDate,\n    currentTimestamp,\n  );\n\n  if (keyword !== '') {\n    window.dataStore.filteredNews = dataNewsContainer.filter(el => el.title.includes(keyword));\n  }\n\n  if (tag != null) {\n    window.dataStore.filteredNews = dataNewsContainer.filter(el => el.feedlabel == tag);\n  }\n\n  window.dataStore.filteredNews = sortDataByNewest(window.dataStore.filteredNews);\n  return (\n    <>\n      <p>News feed:</p>\n      <div>tag:{window.dataStore.tag || 'all tags'}</div>\n      <div>\n        {window.dataStore.filteredNews.map(item => {\n          return <NewsItem itemData={item} setTagCB={setTag} />;\n        })}\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport renderApp from '../../framework/render';\nimport { Timestamp } from '../Timestamp/Timestamp';\nimport Search from '../Search/SearchByKeyword';\nimport NewsFeed from '../NewsFeed/NewsFeed';\nimport isCurrentGameDataLoaded from '../../data/newsData';\n\nconst setCurrentTimestamp = function (value) {\n  window.dataStore.currentTimestamp = value;\n  renderApp();\n};\n\nexport default function NewsResults() {\n  const { checkedGamesIDs, isDataLoading, error, currentTimestamp } = window.dataStore;\n  let content = '';\n\n  if (checkedGamesIDs.length == 0) {\n    content = `Welcome to your personal game news aggregator!`;\n  } else {\n    if (isDataLoading) {\n      content = `Loading...Please, wait. It may takes more than 20 seconds for a first load`;\n    }\n    if (error !== null) {\n      content = error;\n    }\n  }\n\n  if (isCurrentGameDataLoaded() && checkedGamesIDs.length !== 0) {\n    content = (\n      <>\n        <Timestamp\n          currentTimestamp={currentTimestamp}\n          setCurrentTimestampCB={setCurrentTimestamp}\n        />\n        <Search />\n        <NewsFeed />\n      </>\n    );\n  }\n\n  return <div>{content}</div>;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\n\nimport AvailableGames from '../Games/Games';\nimport NewsResults from '../News/NewsResults';\nimport styles from './App.css';\n\nexport default function App() {\n  return (\n    <>\n      <header className={styles.main_header}></header>\n      <AvailableGames />\n      <NewsResults />\n    </>\n  );\n}\n","export { default } from './App';\n","import dataStore from './data/dataStore';\nimport renderApp from './framework/render';\nimport App from './components/App';\n\nwindow.dataStore = dataStore;\n\nrenderApp(App, document.getElementById('app-root'));\n"]}