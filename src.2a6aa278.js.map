{"version":3,"sources":["utils.js","framework/hooks.js","framework/element.js","framework/context.js","data/SteamAPI.js","framework/customHooks.js","framework/render.js","framework/index.js","components/Checkbox/Checkbox.js","context.js","components/Games/Games.js","components/Timestamp/Timestamp.js","components/Search/SearchByKeyword.js","data/newsData.js","components/NewsFeedItem/NewsFeedItem.js","components/NewsFeed/NewsFeed.js","components/News/NewsResults.js","components/App/App.js","components/App/index.js","index.js"],"names":["getDateFromUnixTimestamp","dt","Date","toLocaleDateString","getMonthOfDate","getMonth","getYearOfDate","getFullYear","currentDate","Math","floor","now","sortDataByNewest","data","sort","a","b","date","dataToHTML","parser","content","DOMParser","parseFromString","body","childNodes","div","document","createElement","Array","from","forEach","el","appendChild","getStartDate","start","dayOfWeek","getDay","numDay","getDate","setDate","isFunction","func","current","shouldReRender","wipComponent","hookIndex","createFunctionElement","tag","props","children","hooks","useState","initial","oldHook","hook","state","queue","action","push","useEffect","effect","deps","oldDeps","undefined","hasChanged","hasDepsChanged","unmount","window","removeEventListener","addEventListener","prevDeps","nextDeps","length","some","dep","index","useContext","Context","value","element","DocumentFragment","Object","entries","name","startsWith","toLowerCase","substr","includes","removeAttribute","classList","split","filter","Boolean","add","setAttribute","e","console","error","child","parent","isArray","subChild","nodeType","createTextNode","toString","createFragment","createContext","defaultValue","context","Provider","Consumer","hasWarnedAboutUsingUseContext","is","renderFunction","warn","gamesInfo","apps","appid","herokuURL","getNewsForGameUrl","gameId","loadNewsData","currentGameId","sourceURL","fetch","method","headers","JSON","stringify","url","then","response","json","useDataNews","isLoading","setIsLoading","setError","dataStorage","setDataStorage","setCurrentGameId","currentGameDataIsLoaded","catch","finally","selectedGamesIDs","useApp","cached","IDs","setSelectedGamesIDs","filterID","render","timer","Component","target","requestAnimationFrame","workLoop","replaceChildren","cancelAnimationFrame","Checkbox","id","label","onChange","condition","AppContext","useAppContext","DataContext","useDataContext","Games","event","map","TIMESTAMPS","Timestamp","currentTimestamp","setCurrentTimestamp","selected","Search","currentKeyword","setCurrentKeyword","filterDataByTimestamp","dataByTimestamp","today","newsItem","week","month","alltime","prepareDataToRender","currentTag","dataNewsContainer","filteredNews","appnews","newsitems","title","feedlabel","NewsItem","itemData","contents","NewsFeed","setCurrentTag","changeTag","item","NewsResults","App","styles","main_header","getElementById"],"mappings":"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","file":"src.2a6aa278.js","sourceRoot":"..\\src","sourcesContent":["export function getDateFromUnixTimestamp(dt) {\n  return new Date(dt * 1000).toLocaleDateString();\n}\nexport function getMonthOfDate(dt) {\n  return new Date(dt * 1000).getMonth();\n}\n\nexport function getYearOfDate(dt) {\n  return new Date(dt * 1000).getFullYear();\n}\n\nexport const currentDate = Math.floor(Date.now() / 1000);\n\nexport function sortDataByNewest(data) {\n  return data.sort((a, b) => (a.date < b.date ? 1 : -1));\n}\n\nexport function dataToHTML(data) {\n  const parser = new DOMParser();\n  const toHTML = parser.parseFromString(data, 'text/html');\n  const content = toHTML.body.childNodes;\n  const div = document.createElement('div');\n  Array.from(content).forEach(el => div.appendChild(el));\n  return div;\n}\n\nexport function getStartDate() {\n  let now = new Date();\n  let start = new Date(now);\n  let dayOfWeek = now.getDay();\n  let numDay = now.getDate() + 1;\n  start.setDate(numDay - dayOfWeek - 6);\n\n  return Math.floor(start / 1000);\n}\n\nexport const isFunction = func => typeof func === 'function';\n","import { isFunction } from '../utils';\n\nexport const current = {\n  shouldReRender: true,\n  wipComponent: null,\n  hookIndex: null,\n};\n\nexport function createFunctionElement(tag, props, children) {\n  current.wipComponent = tag;\n  current.hookIndex = 0;\n  current.wipComponent.hooks = current.wipComponent.hooks || [];\n\n  return tag({ ...props, children }, children);\n}\n\nexport function useState(initial) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const hook = {\n    state: oldHook ? oldHook.state : initial,\n    queue: [],\n  };\n\n  const actions = oldHook ? oldHook.queue : [];\n\n  actions.forEach(action => {\n    hook.state = isFunction(action) ? action(hook.state) : action;\n  });\n\n  const setState = action => {\n    current.shouldReRender = true;\n    hook.queue.push(action);\n  };\n\n  wipComponent.hooks[hookIndex] = hook;\n  current.hookIndex++;\n  return [hook.state, setState];\n}\n\nexport function useEffect(effect, deps) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const oldDeps = oldHook ? oldHook.deps : undefined;\n\n  const hasChanged = hasDepsChanged(oldDeps, deps);\n\n  current.hookIndex++;\n\n  if (!hasChanged) return;\n\n  if (oldHook && oldHook.unmount) {\n    window.removeEventListener('beforeunload', oldHook.unmount);\n  }\n\n  wipComponent.hooks[hookIndex] = {\n    unmount: effect(),\n    deps,\n  };\n\n  window.addEventListener('beforeunload', wipComponent.hooks[hookIndex].unmount);\n}\n\nconst hasDepsChanged = (prevDeps, nextDeps) =>\n  !prevDeps ||\n  !nextDeps ||\n  prevDeps.length !== nextDeps.length ||\n  prevDeps.some((dep, index) => dep !== nextDeps[index]);\n\nexport const useContext = Context => Context.value;\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\n\nimport { createFunctionElement } from './hooks';\n\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n        Passing children as the 2nd argument is required as jsx transformer puts component functions\n        and regular tags in wrapper functions that expect children as the 2nd param\n       */\n    return createFunctionElement(tag, props, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else if (name.toLowerCase() === 'classname') {\n            // We want to treat both strings and arrays in a similar manner\n            const classList = typeof value === 'string' ? value.split(' ').filter(Boolean) : value;\n            element.classList.add(...classList);\n          } else {\n            element.setAttribute(\n              name,\n              /** @type {string} */\n              value,\n            );\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","import { current } from '../framework';\nimport { isFunction } from '../utils';\n\n/**\n * @typedef {Object} Context\n * @property {*} Provider - Provider\n * @property {*} Consumer - Consumer\n */\n\n/**\n * Creates Context object with Provider and Consumer\n * @param {*} defaultValue - defaultValue of created context\n * @returns {Context} context object\n */\nexport function createContext(defaultValue) {\n  const context = {\n    value: defaultValue,\n    Provider: null,\n    Consumer: null,\n  };\n\n  let hasWarnedAboutUsingUseContext = false;\n\n  context.Provider = function ({ value = defaultValue, children }) {\n    if (!Object.is(context.value, value)) {\n      current.shouldReRender = true;\n      context.value = value;\n    }\n    return children;\n  };\n\n  context.Consumer = function ({ children }) {\n    const [renderFunction] = children;\n    if (!isFunction(renderFunction)) {\n      !hasWarnedAboutUsingUseContext &&\n        console.warn(\n          'Requires a function as a child.',\n          '\\n',\n          'The function receives the current context value and returns a node.',\n          '\\n',\n          'Or use useContext(Context) inside your component.',\n        );\n      hasWarnedAboutUsingUseContext = true;\n      return children;\n    }\n    return renderFunction(context.value);\n  };\n\n  return context;\n}\n","export const gamesInfo = {\n  apps: [\n    {\n      appid: 730,\n      name: 'Counter-Strike: Global Offensive',\n    },\n    {\n      appid: 1091500,\n      name: 'Cyberpunk 2077',\n    },\n    {\n      appid: 570,\n      name: 'Dota 2',\n    },\n    {\n      appid: 578080,\n      name: 'PUBG',\n    },\n    {\n      appid: 440,\n      name: 'TF2',\n    },\n  ],\n};\n\nexport const herokuURL = 'https://not-so-corsy.herokuapp.com/getdata';\n\nexport function getNewsForGameUrl(gameId) {\n  return `http://api.steampowered.com/ISteamNews/GetNewsForApp/v0002/?appid=${gameId}&count=20`;\n}\n\nexport function loadNewsData(currentGameId) {\n  const sourceURL = getNewsForGameUrl(currentGameId);\n\n  return (\n    fetch(herokuURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url: sourceURL }),\n    })\n      .then(response => response.json())\n      //.then(data => ({ data }.data));\n      .then(data => ({ data }))\n  );\n}\n","import { useEffect, useState } from '../framework';\r\nimport { loadNewsData } from '../data/SteamAPI';\r\n\r\nexport function useDataNews() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [dataStorage, setDataStorage] = useState({});\r\n  const [currentGameId, setCurrentGameId] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (currentGameId) {\r\n      const currentGameDataIsLoaded = dataStorage[currentGameId];\r\n      if (currentGameDataIsLoaded) return;\r\n      // setIsLoading(true); - forever loading\r\n      loadNewsData(currentGameId)\r\n        .then(({ error, data }) => {\r\n          if (error) {\r\n            setError(error);\r\n          } else if (data) {\r\n            // setDataStorage({ ...dataStorage, [currentGameId]: data }); - doesn't work, why?\r\n            dataStorage[currentGameId] = data;\r\n          }\r\n        })\r\n        .catch(setError)\r\n        .finally(() => setIsLoading(false));\r\n    }\r\n  }, [currentGameId]);\r\n\r\n  const { selectedGamesIDs } = useApp(currentGameId, setCurrentGameId);\r\n  return {\r\n    currentGameId,\r\n    setCurrentGameId,\r\n    isLoading,\r\n    error,\r\n    cached: {\r\n      data: dataStorage,\r\n      IDs: selectedGamesIDs,\r\n    },\r\n    dataStorage,\r\n    selectedGamesIDs,\r\n  };\r\n}\r\n\r\nexport function useApp(currentGameId, setCurrentGameId) {\r\n  const [selectedGamesIDs, setSelectedGamesIDs] = useState([]);\r\n  useEffect(() => {\r\n    if (currentGameId) {\r\n      selectedGamesIDs.includes(currentGameId.toString())\r\n        ? setSelectedGamesIDs(\r\n            selectedGamesIDs.filter(filterID => filterID !== currentGameId.toString()),\r\n          )\r\n        : setSelectedGamesIDs([...selectedGamesIDs, currentGameId]);\r\n      setCurrentGameId('');\r\n    }\r\n  }, [currentGameId]);\r\n\r\n  return {\r\n    selectedGamesIDs,\r\n    setSelectedGamesIDs,\r\n  };\r\n}\r\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement } from './element';\nimport { current } from './hooks';\n\n/**\n * Renders a component and attaches it to the target DOM element\n * @param Component - function\n * @param target - DOM element to attach component to\n */\n\nlet timer;\n\nexport function render(Component, target) {\n  function workLoop() {\n    if (current.shouldReRender) {\n      current.shouldReRender = false;\n      target.replaceChildren(<Component />);\n    }\n\n    cancelAnimationFrame(timer);\n    timer = requestAnimationFrame(workLoop);\n  }\n  timer = requestAnimationFrame(workLoop);\n}\n\nexport default render;\n","export * from './element';\nexport * from './context';\nexport * from './hooks';\nexport * from './customHooks';\nexport * from './render';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\n//import styles from './Checkbox.css';\n\nexport default function Checkbox({ id = null, label = '', onChange = null, condition = false }) {\n  return (\n    <label For={id}>\n      <input type=\"checkbox\" id={id} value={id} checked={condition} onChange={onChange} />\n      <span>{label}</span>\n    </label>\n  );\n}\n","import { createContext, useContext } from './framework';\r\n\r\nexport const AppContext = createContext({});\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\nexport const DataContext = createContext({});\r\nexport const useDataContext = () => useContext(DataContext);\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment, render } from '../../framework';\r\nimport { gamesInfo } from '../../data/SteamAPI';\r\nimport Checkbox from '../Checkbox/Checkbox';\r\nimport { useAppContext } from '../../context';\r\n\r\nexport default function Games({ setCurrentGameId }) {\r\n  const selectedGamesIDs = useAppContext();\r\n\r\n  return (\r\n    <form\r\n      id=\"games\"\r\n      onChange={event => {\r\n        setCurrentGameId(event.target.id);\r\n      }}\r\n    >\r\n      <fieldset class=\"allowed_games\">\r\n        <legend>Select games to track news</legend>\r\n        {gamesInfo.apps.map(({ appid, name }) => (\r\n          <>\r\n            <Checkbox\r\n              id={appid}\r\n              label={name}\r\n              condition={Array.from(selectedGamesIDs).includes(appid.toString())}\r\n            />\r\n          </>\r\n        ))}\r\n      </fieldset>\r\n    </form>\r\n  );\r\n}\r\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\n\nconst TIMESTAMPS = [\n  { id: 'all', value: 'alltime', name: 'All news' },\n  { id: 'today', value: 'today', name: 'Today' },\n  { id: 'week', value: 'week', name: 'For last 7 days' },\n  { id: 'month', value: 'month', name: 'This month' },\n];\n\nexport function Timestamp({ currentTimestamp, setCurrentTimestamp }) {\n  return (\n    <>\n      <div>\n        <p>Timestamps</p>\n        <select id=\"selectTimestamp\" onChange={event => setCurrentTimestamp(event.target.value)}>\n          {TIMESTAMPS.map(({ id, value, name }) => {\n            return (\n              <option\n                value={value}\n                id={id}\n                name=\"timestamp-option\"\n                {...(value === currentTimestamp ? { selected: '' } : {})}\n              >\n                {name}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, render } from '../../framework';\n\nexport default function Search({ currentKeyword, setCurrentKeyword }) {\n  return (\n    <div>\n      <p>Input KEYWORD and press enter</p>\n      <input\n        type=\"text\"\n        id=\"search-input\"\n        placeholder=\"search\"\n        value={currentKeyword}\n        onChange={event => setCurrentKeyword(event.target.value)}\n      />\n      <button type=\"button\" onClick={event => render()}>\n        Search\n      </button>\n    </div>\n  );\n}\n","import {\n  getDateFromUnixTimestamp,\n  getYearOfDate,\n  getMonthOfDate,\n  getStartDate,\n  currentDate,\n  sortDataByNewest,\n} from '../utils';\n\nfunction filterDataByTimestamp(data, currentDate, currentTimestamp) {\n  const dataByTimestamp = {\n    today: () => {\n      return data.filter(\n        newsItem =>\n          getDateFromUnixTimestamp(newsItem.date) == getDateFromUnixTimestamp(currentDate),\n      );\n    },\n    week: () => {\n      return data.filter(newsItem => newsItem.date > getStartDate());\n    },\n    month: () => {\n      return data.filter(\n        newsItem =>\n          getYearOfDate(newsItem.date) == getYearOfDate(currentDate) &&\n          getMonthOfDate(newsItem.date) == getMonthOfDate(currentDate),\n      );\n    },\n    alltime: () => {\n      return data;\n    },\n  };\n  return dataByTimestamp[currentTimestamp]();\n}\n\nexport function prepareDataToRender(\n  selectedGamesIDs,\n  dataStorage,\n  currentTimestamp,\n  currentKeyword,\n  currentTag,\n) {\n  let dataNewsContainer = [];\n  let filteredNews = [];\n\n  selectedGamesIDs.map(appid => {\n    if (dataStorage[appid] !== undefined) {\n      dataNewsContainer = [...dataNewsContainer, ...dataStorage[appid].appnews.newsitems];\n    }\n  });\n\n  filteredNews = filterDataByTimestamp(dataNewsContainer, currentDate, currentTimestamp);\n\n  if (currentKeyword !== '') {\n    filteredNews = dataNewsContainer.filter(el => el.title.includes(currentKeyword));\n  }\n\n  if (currentTag) {\n    filteredNews = dataNewsContainer.filter(el => el.feedlabel == currentTag);\n  }\n\n  return sortDataByNewest(filteredNews);\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\n\nimport { getDateFromUnixTimestamp } from '../../utils';\nimport { dataToHTML } from '../../utils';\nimport Checkbox from '../Checkbox/Checkbox';\n\nexport default function NewsItem({ itemData, currentTag, onChange }) {\n  const { date, title, contents, feedlabel } = itemData;\n  return (\n    <>\n      <h3 class=\"title\">{title}</h3>\n      <div>{feedlabel}</div>\n      <div>{getDateFromUnixTimestamp(date)}</div>\n      <p>{dataToHTML(contents)}</p>\n      <div>\n        {' '}\n        All news with tag\n        <>\n          <Checkbox\n            id={feedlabel}\n            label={feedlabel}\n            condition={currentTag == feedlabel}\n            onChange={event => onChange(event.target.value)}\n          />\n        </>\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment, useState } from '../../framework';\r\nimport { prepareDataToRender } from '../../data/newsData';\r\nimport NewsItem from '../NewsFeedItem/NewsFeedItem';\r\nimport { useAppContext, useDataContext } from '../../context';\r\n\r\nexport default function NewsFeed({ currentTimestamp, currentKeyword }) {\r\n  const selectedGamesIDs = useAppContext();\r\n  const dataStorage = useDataContext();\r\n  const [currentTag, setCurrentTag] = useState(null);\r\n\r\n  const changeTag = value => {\r\n    if (currentTag !== null) {\r\n      setCurrentTag(null);\r\n    } else {\r\n      setCurrentTag(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p>News feed:</p>\r\n      <div>tag:{currentTag || 'all tags'}</div>\r\n      <div>\r\n        {prepareDataToRender(\r\n          Array.from(selectedGamesIDs),\r\n          dataStorage,\r\n          currentTimestamp,\r\n          currentKeyword,\r\n          currentTag,\r\n        ).map(item => {\r\n          return (\r\n            <NewsItem\r\n              itemData={item}\r\n              currentTag={currentTag}\r\n              setCurrentTag={setCurrentTag}\r\n              onChange={changeTag}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment, useState, render } from '../../framework';\r\nimport { Timestamp } from '../Timestamp/Timestamp';\r\nimport Search from '../Search/SearchByKeyword';\r\nimport NewsFeed from '../NewsFeed/NewsFeed';\r\n\r\nexport default function NewsResults({ isLoading, error }) {\r\n  const [currentTimestamp, setCurrentTimestamp] = useState('alltime');\r\n  const [currentKeyword, setCurrentKeyword] = useState('');\r\n\r\n  if (error) {\r\n    return <div>error</div>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...Please, wait. It may takes more than 20 seconds for a first load</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Timestamp currentTimestamp={currentTimestamp} setCurrentTimestamp={setCurrentTimestamp} />\r\n      <Search currentKeyword={currentKeyword} setCurrentKeyword={setCurrentKeyword} />\r\n      <NewsFeed currentTimestamp={currentTimestamp} currentKeyword={currentKeyword} />\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment, useDataNews } from '../../framework';\r\nimport AvailableGames from '../Games/Games';\r\nimport NewsResults from '../News/NewsResults';\r\nimport styles from './App.css';\r\nimport { AppContext, DataContext } from '../../context';\r\n\r\nexport default function App() {\r\n  const { setCurrentGameId, selectedGamesIDs, error, isLoading, dataStorage } = useDataNews();\r\n\r\n  return (\r\n    <>\r\n      <header className={styles.main_header}></header>\r\n      <AppContext.Provider value={selectedGamesIDs}>\r\n        <AvailableGames setCurrentGameId={setCurrentGameId} />\r\n        {selectedGamesIDs.length == 0 ? (\r\n          <div>Welcome to your personal game news aggregator!</div>\r\n        ) : (\r\n          <DataContext.Provider value={dataStorage}>\r\n            <NewsResults isLoading={isLoading} error={error} />\r\n          </DataContext.Provider>\r\n        )}\r\n      </AppContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","export { default } from './App';\n","import { render } from './framework';\nimport App from './components/App';\n\nrender(App, document.getElementById('app-root'));\n"]}